// Generated from ./tmp/JSON.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,14,139,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,
1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,10,5,10,75,8,
10,10,10,12,10,78,9,10,1,10,1,10,1,11,1,11,1,11,3,11,85,8,11,1,12,1,12,1,
12,1,12,1,12,1,12,1,13,1,13,1,14,1,14,1,15,3,15,98,8,15,1,15,1,15,1,15,4,
15,103,8,15,11,15,12,15,104,3,15,107,8,15,1,15,3,15,110,8,15,1,16,1,16,1,
16,5,16,115,8,16,10,16,12,16,118,9,16,3,16,120,8,16,1,17,1,17,3,17,124,8,
17,1,17,4,17,127,8,17,11,17,12,17,128,1,18,1,18,1,19,4,19,134,8,19,11,19,
12,19,135,1,19,1,19,0,0,20,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
21,11,23,0,25,0,27,0,29,0,31,12,33,0,35,0,37,13,39,14,1,0,8,8,0,34,34,47,
47,92,92,98,98,102,102,110,110,114,114,116,116,3,0,48,57,65,70,97,102,3,
0,0,31,34,34,92,92,1,0,48,57,1,0,49,57,2,0,69,69,101,101,2,0,43,43,45,45,
3,0,9,10,13,13,32,32,144,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,
0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,
0,0,0,21,1,0,0,0,0,31,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,1,41,1,0,0,0,3,43,
1,0,0,0,5,45,1,0,0,0,7,47,1,0,0,0,9,49,1,0,0,0,11,51,1,0,0,0,13,53,1,0,0,
0,15,58,1,0,0,0,17,64,1,0,0,0,19,69,1,0,0,0,21,71,1,0,0,0,23,81,1,0,0,0,
25,86,1,0,0,0,27,92,1,0,0,0,29,94,1,0,0,0,31,97,1,0,0,0,33,119,1,0,0,0,35,
121,1,0,0,0,37,130,1,0,0,0,39,133,1,0,0,0,41,42,5,123,0,0,42,2,1,0,0,0,43,
44,5,44,0,0,44,4,1,0,0,0,45,46,5,125,0,0,46,6,1,0,0,0,47,48,5,58,0,0,48,
8,1,0,0,0,49,50,5,91,0,0,50,10,1,0,0,0,51,52,5,93,0,0,52,12,1,0,0,0,53,54,
5,116,0,0,54,55,5,114,0,0,55,56,5,117,0,0,56,57,5,101,0,0,57,14,1,0,0,0,
58,59,5,102,0,0,59,60,5,97,0,0,60,61,5,108,0,0,61,62,5,115,0,0,62,63,5,101,
0,0,63,16,1,0,0,0,64,65,5,110,0,0,65,66,5,117,0,0,66,67,5,108,0,0,67,68,
5,108,0,0,68,18,1,0,0,0,69,70,5,45,0,0,70,20,1,0,0,0,71,76,5,34,0,0,72,75,
3,23,11,0,73,75,3,29,14,0,74,72,1,0,0,0,74,73,1,0,0,0,75,78,1,0,0,0,76,74,
1,0,0,0,76,77,1,0,0,0,77,79,1,0,0,0,78,76,1,0,0,0,79,80,5,34,0,0,80,22,1,
0,0,0,81,84,5,92,0,0,82,85,7,0,0,0,83,85,3,25,12,0,84,82,1,0,0,0,84,83,1,
0,0,0,85,24,1,0,0,0,86,87,5,117,0,0,87,88,3,27,13,0,88,89,3,27,13,0,89,90,
3,27,13,0,90,91,3,27,13,0,91,26,1,0,0,0,92,93,7,1,0,0,93,28,1,0,0,0,94,95,
8,2,0,0,95,30,1,0,0,0,96,98,5,45,0,0,97,96,1,0,0,0,97,98,1,0,0,0,98,99,1,
0,0,0,99,106,3,33,16,0,100,102,5,46,0,0,101,103,7,3,0,0,102,101,1,0,0,0,
103,104,1,0,0,0,104,102,1,0,0,0,104,105,1,0,0,0,105,107,1,0,0,0,106,100,
1,0,0,0,106,107,1,0,0,0,107,109,1,0,0,0,108,110,3,35,17,0,109,108,1,0,0,
0,109,110,1,0,0,0,110,32,1,0,0,0,111,120,5,48,0,0,112,116,7,4,0,0,113,115,
7,3,0,0,114,113,1,0,0,0,115,118,1,0,0,0,116,114,1,0,0,0,116,117,1,0,0,0,
117,120,1,0,0,0,118,116,1,0,0,0,119,111,1,0,0,0,119,112,1,0,0,0,120,34,1,
0,0,0,121,123,7,5,0,0,122,124,7,6,0,0,123,122,1,0,0,0,123,124,1,0,0,0,124,
126,1,0,0,0,125,127,7,3,0,0,126,125,1,0,0,0,127,128,1,0,0,0,128,126,1,0,
0,0,128,129,1,0,0,0,129,36,1,0,0,0,130,131,7,3,0,0,131,38,1,0,0,0,132,134,
7,7,0,0,133,132,1,0,0,0,134,135,1,0,0,0,135,133,1,0,0,0,135,136,1,0,0,0,
136,137,1,0,0,0,137,138,6,19,0,0,138,40,1,0,0,0,13,0,74,76,84,97,104,106,
109,116,119,123,128,135,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class JSONLexer extends antlr4.Lexer {

    static grammarFileName = "JSON.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'{'", "','", "'}'", "':'", "'['", "']'", 
                         "'true'", "'false'", "'null'", "'-'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, "STRING", "NUMBER", "DIGIT", 
                          "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "STRING", "ESC", "UNICODE", 
                      "HEX", "SAFECODEPOINT", "NUMBER", "INT", "EXP", "DIGIT", 
                      "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

JSONLexer.EOF = antlr4.Token.EOF;
JSONLexer.T__0 = 1;
JSONLexer.T__1 = 2;
JSONLexer.T__2 = 3;
JSONLexer.T__3 = 4;
JSONLexer.T__4 = 5;
JSONLexer.T__5 = 6;
JSONLexer.T__6 = 7;
JSONLexer.T__7 = 8;
JSONLexer.T__8 = 9;
JSONLexer.T__9 = 10;
JSONLexer.STRING = 11;
JSONLexer.NUMBER = 12;
JSONLexer.DIGIT = 13;
JSONLexer.WS = 14;



